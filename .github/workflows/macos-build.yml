name: macOS build (Electron)

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'   # push a tag like v1.0.0 to trigger a release build

jobs:
  build-mac:
    name: Build macOS (${{ matrix.runner }} â€¢ ${{ matrix.arch }})
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        # macos-13 = Intel runner (x64), macos-14 = Apple Silicon (arm64)
        runner: [macos-13, macos-14]
        arch: [x64, arm64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm ci

      # If you don't need signing/notarization yet, this still works (unsigned).
      # If you DO want signing/notarization, add the following repo secrets:
      #  - CSC_LINK  (base64 of your .p12 Developer ID Application cert)
      #  - CSC_KEY_PASSWORD
      #  - APPLE_TEAM_ID
      #  - APPLE_ID  (your Apple Developer account email)
      #  - APPLE_APP_SPECIFIC_PASSWORD  (generated on appleid.apple.com)
      # electron-builder will auto-detect and sign/notarize if these are set.
      - name: Build (DMG + ZIP)
        env:
          # Secrets are optional; if unset, build will be unsigned.
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          # Uncomment to disable auto-discovery when you want *unsigned* build on mac:
          # CSC_IDENTITY_AUTO_DISCOVERY: "false"
        run: |
          npx electron-builder --mac dmg zip --${{ matrix.arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: SeafarNexus-mac-${{ matrix.arch }}
          path: dist/*
          if-no-files-found: error
